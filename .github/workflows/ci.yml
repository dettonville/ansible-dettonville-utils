---
name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
#  schedule:
#    - cron: '0 15 * * *'

jobs:
  sanity:
    name: sanity | ${{ matrix.ansible.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ansible:
          - name: devel
            package: https://github.com/ansible/ansible/archive/devel.tar.gz
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install ansible ${{ matrix.ansible.name }}
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.ansible.package }}"

      - name: Debug test env
        run: |
          ansible-test env
        working-directory: ./ansible_collections/dettonville/utils

      - name: Run sanity tests
        run: |
          ansible-test sanity --docker default -v
        working-directory: ./ansible_collections/dettonville/utils

  units:
    name: units | ${{ matrix.ansible.name }} | py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ansible:
          - name: devel
            package: https://github.com/ansible/ansible/archive/devel.tar.gz
        python-version:
          - 3.8
          - 3.9
          - 3.10
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install ansible ${{ matrix.ansible.name }}
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.ansible.package }}"

      - name: Debug test env
        run: |
          ansible-test env
        working-directory: ./ansible_collections/dettonville/utils

      - name: Run unit tests
        run: |
          ansible-test units --docker default --python ${{ matrix.python-version }} -v
        working-directory: ./ansible_collections/dettonville/utils

  integration:
    name: integration | ${{ matrix.ansible.name }} | ${{ matrix.os }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: false
    strategy:
      matrix:
        ansible:
#          - name: stable-2.10
#            package: ansible>=2.10,<2.11
#          - name: stable
#            package: ansible-base
          - name: devel
            package: https://github.com/ansible/ansible/archive/devel.tar.gz
        os:
#          - name: geerlingguy/docker-ubuntu1804-ansible
#            python-version: 3.8
          - name: geerlingguy/docker-ubuntu2004-ansible
            python-version: 3.8
          - name: geerlingguy/docker-centos8-ansible
            python-version: 3.8
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install ansible ${{ matrix.ansible.name }}
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.ansible.package }}"

      - name: Debug test env
        run: |
          ansible-test env
        working-directory: ./ansible_collections/dettonville/utils

      - name: Run integration tests
        run: |
          ansible-test integration -v --docker ${{ matrix.os.name }} --python ${{ matrix.os.python-version }}
        working-directory: ./ansible_collections/dettonville/utils
